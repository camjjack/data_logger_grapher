{"version":3,"file":"app.js","sources":["src/app.js"],"sourcesContent":["/* global Materialize, Plotly */\r\nconst electron = require('electron')\r\nvar {importExcel, importCSV} = require('./import.js')\r\nvar {computeData} = require('./data.js')\r\nconst logger = require('./log.js')\r\n\r\nconst remote = electron.remote\r\nconst Menu = remote.Menu\r\nconst menu = require('./menu.js')\r\nvar {config} = require('./configuration.js')\r\nvar moment = require('moment')\r\nconst ipcRenderer = electron.ipcRenderer\r\n\r\nMenu.setApplicationMenu(Menu.buildFromTemplate(menu.menuTemplate))\r\n\r\nvar graphData = {}\r\nvar firstFile = {}\r\nvar secondFile = {}\r\n\r\nvar getTable = function (dataDict, name) {\r\n  var s = '<table class=\"striped\"><thead><tr><th data-field=\"item\" colspan=\"2\" class=\"center-align\">' + name + '</th></tr></thead><tbody>'\r\n  s += '<tr><th>Sample time</th><td>' + dataDict.sampleTime / 60000 + ' minutes</td></tr>'\r\n  s += '<tr><th>% time spent cooling</th><td>' + dataDict.cooling_percentage + '%</td></tr>'\r\n  s += '<tr><th>% time above ' + config.pivot + '&deg;C</th><td>' + dataDict.abovePivotPercentage + '%</td></tr>'\r\n  s += '<tr><th>% time below ' + config.pivot + '&deg;C</th><td>' + dataDict.belowPivotPercentage + '%</td></tr>'\r\n  if (!isNaN(dataDict.humidityAverage)) {\r\n    s += '<tr><th>Humidity average</th><td>' + dataDict.humidityAverage + '</td></tr>'\r\n  }\r\n  if (!isNaN(dataDict.dewPointAverage)) {\r\n    s += '<tr><th>Dew point average</th><td>' + dataDict.dewPointAverage + '&deg;C</td></tr>'\r\n  }\r\n  s += '</tbody></table>'\r\n  return s\r\n}\r\n\r\nvar processFile = function (file, graphDivName, tableDiv) {\r\n  logger.log('info', 'ProcessFile: ' + file.path)\r\n\r\n  if (file.name.endsWith('.xlsx')) {\r\n    importExcel(file.path, config.maxTemp, config.minTemp, config.pivot).then(function (xlsxDict) {\r\n      graphData[file.name] = xlsxDict\r\n      doGraph(file.name, graphDivName, tableDiv)\r\n    }, function (error) {\r\n      Materialize.toast(error, 10000)\r\n      logger.log('error', 'Failed to import csv ' + error)\r\n    })\r\n  } else {\r\n    importCSV(file.path, config.maxTemp, config.minTemp, config.pivot).then(function (csvDataDict) {\r\n      graphData[file.name] = csvDataDict\r\n      console.log(graphData[file.name])\r\n      doGraph(file.name, graphDivName, tableDiv)\r\n    }, function (error) {\r\n      Materialize.toast(error, 10000)\r\n      logger.log('error', 'Failed to import csv', error)\r\n    })\r\n  }\r\n}\r\n\r\nvar doGraph = function (name, graphDivName, tableDiv) {\r\n  var data = []\r\n  var layout = {\r\n    title: name.split('.')[0],\r\n    xaxis: {\r\n      showgrid: false,                  // remove the x-axis grid lines\r\n      rangeselector: {}\r\n    }\r\n  }\r\n\r\n  if (config.displayTemp) {\r\n    logger.info('graphing with temp')\r\n    data.push({\r\n      x: graphData[name].time,\r\n      y: graphData[name].temperature,\r\n      name: 'temperature'\r\n    })\r\n    layout.yaxis = {title: 'Temperature'}\r\n  }\r\n  if (config.displayHumidity) {\r\n    logger.info('graphing with humidity')\r\n    data.push({\r\n      x: graphData[name].time,\r\n      y: graphData[name].humidity,\r\n      name: 'humidity'\r\n    })\r\n    if (layout.yaxis === undefined) {\r\n      layout.yaxis = {title: 'Humidity'}\r\n    } else {\r\n      data[1].yaxis = 'y2'\r\n      layout.yaxis2 = { title: 'Humidity',\r\n        overlaying: 'y',\r\n        side: 'right'\r\n      }\r\n    }\r\n  }\r\n  logger.info('data ' + data[0])\r\n\r\n  var myDiv = document.getElementById(graphDivName)\r\n  Plotly.newPlot(myDiv, data, layout)\r\n\r\n  myDiv.on('plotly_relayout',\r\n    function (eventdata) {\r\n      var startTime = eventdata['xaxis.range[0]'] !== undefined ? moment(eventdata['xaxis.range[0]']) : 0\r\n      var endTime = eventdata['xaxis.range[1]'] !== undefined ? moment(eventdata['xaxis.range[1]']) : 0\r\n      logger.debug('Graph relayout:')\r\n      logger.debug('start_time ' + startTime)\r\n\r\n      tableDiv.innerHTML = getTable(computeData(graphData[name].dataEntries, config.pivot, startTime, endTime), name)\r\n\r\n      // tell the main process we have finished.\r\n      ipcRenderer.send('resising-finished')\r\n    }\r\n  )\r\n\r\n  window.addEventListener('resize', function () { Plotly.Plots.resize(myDiv) })\r\n  tableDiv.innerHTML = getTable(graphData[name], name)\r\n}\r\n\r\ndocument.ondragover = function (event) {\r\n  event.preventDefault()\r\n  return false\r\n}\r\n\r\ndocument.ondrop = function (event) {\r\n  event.preventDefault()\r\n  return false\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n  var first = document.getElementById('first')\r\n  var second = document.getElementById('second')\r\n  first.ondragover = function () {\r\n    return false\r\n  }\r\n  first.ondragleave = first.ondragend = function () {\r\n    return false\r\n  }\r\n\r\n  first.ondrop = function (e) {\r\n    e.preventDefault()\r\n    var file = e.dataTransfer.files[0]\r\n    firstFile = {path: file.path, name: file.name}\r\n    processFile(firstFile, 'graph1', first)\r\n    return false\r\n  }\r\n  second.ondragover = function () {\r\n    return false\r\n  }\r\n  second.ondragleave = second.ondragend = function () {\r\n    return false\r\n  }\r\n  second.ondrop = function (e) {\r\n    e.preventDefault()\r\n    var file = e.dataTransfer.files[0]\r\n    secondFile = {path: file.path, name: file.name}\r\n    processFile(secondFile, 'graph2', second)\r\n    return false\r\n  }\r\n\r\n  ipcRenderer.on('reprocess', function (event, c) {\r\n    config = c\r\n    logger.info('received reprocess request from main')\r\n    if (firstFile.path) {\r\n      processFile(firstFile, 'graph1', first)\r\n    }\r\n    if (secondFile.path) {\r\n      processFile(secondFile, 'graph2', second)\r\n    }\r\n  })\r\n})\r\n"],"names":[],"mappings":"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"}